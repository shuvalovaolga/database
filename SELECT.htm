<HTML>
<HEAD>
 <TITLE>InterBase SQL: SELECT</TITLE>
 <!-- Meta http equivalent was here                                     -->
 <LINK rel="prev" href="ROLLBACK.htm">
 <LINK rel="next" href="SET_DATABASE.htm">
 <LINK rel="contents" href="start.htm#toc">
 <LINK rel="stylesheet" href="styles.css" type="text/css">
</HEAD>

<BODY bgcolor="#FFFFFF" text="#000000" link="#099771" vlink="#006741" alink="#800000">
<A NAME="start"></A>

<script><!--
if (window.focus) window.focus();
var toc_url="toc_stat.htm";
var page_type="stat_ref";
if (window.parent && parent.allow_frames) parent.update_frames();
//--></script>

<!-- top -->
<div><small><span class="Navigation">
<a href="start.htm">Оглавление</a>
&nbsp;|&nbsp;<a href="ROLLBACK.htm">Назад</a>
&nbsp;|&nbsp;<a href="SET_DATABASE.htm">Вперед</a>
</span></small></div>
<HR noshade>
<div align="right"><em>Справочник по инструкциям и функциям InterBase SQL</em></div>
<!-- /top -->

<H2>SELECT</H2>
<!-- contents -->
<dl>
<dt><dd><a href="index.htm">Описание</a>
<dt><dd><a href="index.htm">Синтаксис</a>
<dt><dd><a href="index.htm">Примеры</a>
<dt><dd><a href="index.htm">Смотри так же</a>
</dl>
<!-- /contents -->

<h3><a name="descript">Описание</a></h3>
<p>SELECT возвращает данные из таблицы, вида или сохраненной процедуры.
 Различныные инструкции SELECT выполняют слдующие действия:</p>
<ul>
 <li>Возвращают одиночную стоку или часть строки из таблицы. Это операция
 упоминается, как <em>sigleton выбор</em>.
 <li>Непосредственно возвращают список строк или список частичных строк из
 таблицы.
 <li>Возвращают связанные строки, или частичные строки из <em>join</em> двух или
 более таблиц.
 <li>Возвращают все строки, или частичные строки из <em>union</em> двух или
 более таблиц.
</ul>
<p>Любая инструкция SELECT содержит два обязательных предложения (SELECT, FROM)
и возможно другие предложения (WHERE, GROUP BY, HAVING, UNION, PLAN, ORDER BY).
Предложения SELECT и FROM обязательны и для sigleton, и для multi-row SELECT;
все другие предложения перечисленные ниже факультативны. Следующая таблица
объясняет назначение каждого предложения:</p>
<table width="100%" border="0" cellpadding="0" cellspacing="16">
<tr>
 <th align="left" width="25%">Предложение</th>
 <th align="left" width="75%">Назначение</th>
</tr>
<tr>
 <td colspan="2" bgcolor="#000000" height="2">
 <img src="1px.gif" border="0" width="1" height="1"></td>
</tr>
<tr valign="top">
 <td><code>SELECT</code></td>
 <td>Список столбцов, которые возвращаются.</td>
</tr>
<tr valign="top">
 <td><code>FROM</code></td>
 <td>Определяет таблицы в которых ищутся значения.</td>
</tr>
<tr valign="top">
 <td><code>WHERE</code></td>
 <td>Определенное условие поиска, которое используется, чтобы выбрать
 необходимые стоки из множества всех строк. Предложение WHERE может содержать
 инструкцию SELECT, которая упоминается, как <em>подзапрос</em></td>
</tr>
<tr valign="top">
 <td><code>GROUP BY</code></td>
 <td>Группирует возвращенные строки основываясь на общих значениях столбцов.
 Используется совместно с HAVING.</td>
</tr>
<tr valign="top">
 <td><code>HAVING</code></td>
 <td>Restricts rows generated by GROUP BY to a subset of those rows.</td>
</tr>
<tr valign="top">
 <td><code>UNION</code></td>
 <td>Комбинирует результаты двух или более инструкций SELECT создавая одиночную
 динамическую таблицу исключая повторяющиеся строки.</td>
</tr>
<tr valign="top">
 <td><code>ORDER BY</code></td>
 <td>Определяет порядок сортировки строк возвращенных SELECT, по умолчанию в
 возрастающем порядке (ASC), или в убывающем порядке (DESC).</td>
</tr>
<tr valign="top">
 <td><code>PLAN</code></td>
 <td>Определяет план запроса, который будет использоваться оптимизатором запроса
 вместо обычного выбора.</td>
</tr>
</table>

<!-- to_start --><p><small><span class="Navigation"><a href="index.htm">К началу страницы...</a></span></small></p>

<h3><a name="syntax">Синтаксис</a></h3>
<pre>SELECT [DISTINCT | ALL] {* | <var>&lt;val&gt;</var> [, <var>&lt;val&gt;</var> ...]}

FROM <var>&lt;tableref&gt;</var> [, <var>&lt;tableref&gt;</var> ...]
  [WHERE <var>&lt;search_condition&gt;</var>]
  [GROUP BY <var>col</var> [COLLATE <var>collation</var>] [, <var>col</var> [COLLATE <var>collation</var>] ...]
  [HAVING <var>&lt;search_condition&gt;</var>]
  [UNION <var>&lt;select_expr&gt;</var>]
  [PLAN <var>&lt;plan_expr&gt;</var>]
  [ORDER BY <var>&lt;order_list&gt;</var>]

<var>&lt;val&gt;</var> = {
<var>col</var> [<var>&lt;array_dim&gt;</var>] | <var>&lt;constant&gt;</var> | <var>&lt;expr&gt;</var> | <var>&lt;function&gt;</var>
  | NULL | USER | RDB$DB_KEY
  }

<var>&lt;array_dim&gt;</var> = <b>[</b>x:y [, x:y ...]<b>]</b>
</pre>
<p><b>Обратите внимание:</b>
Внешние скобки (выделены жирным) должны быть присутствовать при ссылке на массив.</p>

<pre><var>&lt;constant&gt;</var> = <var>num</var> | "<var>string</var>" | <var>charsetname</var> "<var>string</var>"

<var>&lt;expr&gt;</var> = Допустимое выражение SQL, результат которого одиночное значение.

<var>&lt;function&gt;</var> = {
COUNT (* | [ALL] <var>&lt;val&gt;</var> | DISTINCT <var>&lt;val&gt;</var>)
  | SUM ([ALL] <var>&lt;val&gt;</var> | DISTINCT <var>&lt;val&gt;</var>)
  | AVG ([ALL] <var>&lt;val&gt;</var> | DISTINCT <var>&lt;val&gt;</var>)
  | MAX ([ALL] <var>&lt;val&gt;</var> | DISTINCT <var>&lt;val&gt;</var>)
  | MIN ([ALL] <var>&lt;val&gt;</var> | DISTINCT <var>&lt;val&gt;</var>)
  | CAST (<var>&lt;val&gt;</var> AS <var>&lt;datatype&gt;</var>)
  | UPPER (<var>&lt;val&gt;</var>)
  | GEN_ID (<var>generator</var>, <var>&lt;val&gt;</var>)
  }

<var>&lt;tableref&gt;</var> = <var>&lt;joined_table&gt;</var> | <var>table</var> | <var>view</var> | <var>procedure</var>
[(<var>&lt;val&gt;</var> [, <var>&lt;val&gt;</var> ...])] [<var>alias</var>]

<var>&lt;joined_table&gt;</var> = <var>&lt;tableref&gt;</var> <var>&lt;join_type&gt;</var> JOIN <var>&lt;tableref&gt;</var>
ON <var>&lt;search_condition&gt;</var> | (<var>&lt;joined_table&gt;</var>)

<var>&lt;join-type&gt;</var> = {[INNER] | {LEFT | RIGHT | FULL } [OUTER]} JOIN

<var>&lt;search_condition&gt;</var> = {<var>&lt;val&gt;</var> <var>&lt;operator&gt;</var>

{<var>&lt;val&gt;</var> | (<var>&lt;select_one&gt;</var>)}
  | <var>&lt;val&gt;</var> [NOT] BETWEEN <var>&lt;val&gt;</var> AND <var>&lt;val&gt;</var>
  | <var>&lt;val&gt;</var> [NOT] LIKE <var>&lt;val&gt;</var> [ESCAPE <var>&lt;val&gt;</var>]
  | <var>&lt;val&gt;</var> [NOT] IN (<var>&lt;val&gt;</var> [, <var>&lt;val&gt;</var> ...] | <var>&lt;select_list&gt;</var>)
  | <var>&lt;val&gt;</var> IS [NOT] NULL
  | <var>&lt;val&gt;</var> {[NOT] {= | &lt; | &gt;} | &gt;= | &lt;=}
    {ALL | SOME | ANY} (<var>&lt;select_list&gt;</var>)
  | EXISTS (<var>&lt;select_expr&gt;</var>)
  | SINGULAR (<var>&lt;select_expr&gt;</var>)
  | <var>&lt;val&gt;</var> [NOT] CONTAINING <var>&lt;val&gt;</var>
  | <var>&lt;val&gt;</var> [NOT] STARTING [WITH] <var>&lt;val&gt;</var>
  | (<var>&lt;search_condition&gt;</var>)
  | NOT <var>&lt;search_condition&gt;</var>
  | <var>&lt;search_condition&gt;</var> OR <var>&lt;search_condition&gt;</var>
  | <var>&lt;search_condition&gt;</var> AND <var>&lt;search_condition&gt;</var>}

<var>&lt;operator&gt;</var> = {= | &lt; | &gt; | &lt;= | &gt;= | !&lt; | !&gt; | &lt;&gt; | !=}

<var>&lt;select_one&gt;</var> = SELECT on a single column that returns exactly one row.

<var>&lt;select_list&gt;</var> = SELECT on a single column that returns zero or more rows.

<var>&lt;select_expr&gt;</var> = SELECT on a list of values that returns zero or more rows.

<var>&lt;plan_expr&gt;</var> =
[JOIN | [SORT] MERGE] (<var>&lt;plan_item&gt;</var> | <var>&lt;plan_expr&gt;</var>
     [, <var>&lt;plan_item&gt;</var> | <var>&lt;plan_expr&gt;</var> ...])

<var>&lt;plan_item&gt;</var> = {<var>table</var> | <var>alias</var>}
  NATURAL | INDEX (<var>&lt;index&gt;</var> [, <var>&lt;index&gt;</var> ...]) | ORDER <var>&lt;index&gt;</var>

<var>&lt;order_list&gt;</var> =
{<var>col</var> | <var>int</var>} [COLLATE <var>collation</var>] [ASC[ENDING] | DESC[ENDING]]
  [, <var>&lt;order_list&gt;</var>]
</pre>

<!-- ArgumentTable -->
<table width="100%" border="0" cellpadding="0" cellspacing="16">
<tr>
 <th align="left" width="25%">Аргумент</th>
 <th align="left" width="75%">Описание</th>
</tr>
<tr>
 <td colspan="2" bgcolor="#000000" height="2">
 <img src="1px.gif" border="0" width="1" height="1"></td>
</tr>
<tr valign="top">
 <td><code>SELECT [DISTINCT | ALL]</code></td>
 <td>Определяет данные, для поиска. DISTINCT удаляет повторяющиеся значения
 из возвращенных данных. ALL, параметр по умолчанию, возвращает все данные.</td>
</tr>
<tr valign="top">
 <td><code>{* | <var>&lt;val&gt;</var> [, <var>&lt;val&gt;</var> ...]}</code></td>
 <td>* - возвращает все столбцы из определенной таблицы.
 <p><var>&lt;val&gt;</var> [, <var>&lt;val&gt;</var> ...] - возвращает
 определенный список столбцов и значений.</td>
</tr>
<tr valign="top">
 <td><code>FROM <var>&lt;tableref&gt;</var> [, <var>&lt;tableref&gt;</var> ...]</code></td>
 <td>Список таблиц, видов и сохраненных процедур, из которых возвращаются данные.
 Список может включать JOIN, объединения могут быть вложенными.</td>
</tr>
<tr valign="top">
 <td><code><var>table</var></code></td>
 <td>Имя существующей таблицы в базе данных.</td>
</tr>
<tr valign="top">
 <td><code><var>view</var></code></td>
 <td>имя существующего вида в базе данных.</td>
</tr>
<tr valign="top">
 <td><code><var>procedure</var></code></td>
 <td>Имя существующей сохраненной процедуры, которая функционирует, как
 инструкция SELECT.</td>
</tr>
<tr valign="top">
 <td><code><var>alias</var></code></td>
 <td>Псевдоним - краткое, альтернативное имя для таблицы или вида. After
 declaration in <var>tabdef</var>, alias can stand in for subsequent references
 to a table or view.</td>
</tr>
<tr valign="top">
 <td><code><var>&lt;joined_table&gt;</var></code></td>
 <td>Ссылка таблицы состоящая из JOIN.</td>
</tr>
<tr valign="top">
 <td><code><var>&lt;join_type&gt;</var></code></td>
 <td>Тип выполнения объединения. По умолчанию INNER.</td>
</tr>
<tr valign="top">
 <td><code>WHERE <var>&lt;search_cond&gt;</var></code></td>
 <td>Определяет условия, которые ограничивают подмножество возвращаемых строк из
 всех доступных строк.</td>
</tr>
<tr valign="top">
 <td><code>GROUP BY <var>&lt;col&gt;</var>[, <var>&lt;col&gt;</var> ...]</code></td>
 <td>Разделяет результаты запроса в группы содержащие все строки с одинаковыми
 значениями, основанными на списке столбцов.</td>
</tr>
<tr valign="top">
 <td><code>COLLATE <var>collation</var></code></td>
 <td>Определяет порядок сопоставления для данных возвращаемых запросом.</td>
</tr>
<tr valign="top">
 <td><code>HIVING <var>&lt;search_cond&gt;</var></code></td>
 <td>Используется совместно с GRUP BY. Определяет условия, которые ограничивают
 группировку возвращаемых строк.</td>
</tr>
<tr valign="top">
 <td><code>UNION</code></td>
 <td>Комбинирует две или более таблиц, которые имеют полностью, либо частично
 одинаковую структуру.</td>
</tr>
<tr valign="top">
 <td><code>PLAN <var>&lt;plan_expr&gt;</var></code></td>
 <td>Определяет план доступа для оптимизатора <em>InterBase</em>, который используется
 в течении поиска.</td>
</tr>
<tr valign="top">
 <td><code><var>&lt;plan_item&gt;</var></code></td>
 <td>определяет таблицу и индексный метод для плана.</td>
</tr>
<tr valign="top">
 <td><code>ORDER BY <var>&lt;order_list&gt;</var></code></td>
 <td>Определяет порядок в котором строки возвращены.</td>
</tr>
</table>

<!-- to_start --><p><small><span class="Navigation"><a href="index.htm">К началу страницы...</a></span></small></p>

<h3><a name="exsample">Примеры</a></h3>
<p>Следующая инструкция выбирает столбцы из таблицы:</p>
<pre>SELECT JOB_GRADE, JOB_CODE, JOB_COUNTRY, MAX_SALARY FROM PROJECT;
</pre>

<p>Следующая инструкция использует шаблон *, что бы выбрать все столбцы и строки
из таблицы:</p>
<pre>SELECT * FROM COUNTRIES;
</pre>

<p>Следующая инструкция использует агрегатную функцию, что бы сосчитать все
строки в таблице, которые удовлетворяют условиям поиска определенным в
предложении WHERE:</p>
<pre>SELECT COUNT (*) FROM COUNTRY
  WHERE POPULATION > 5000000;
</pre>

<p>Следующая инструкция устанавливает псевдоним таблицы в предложении SELECT и
использует его для идентификации столбцов в предложении WHERE:</p>
<pre>SELECT C.CITY FROM CITIES C
  WHERE C.POPULATION < 1000000;
</pre>

<p>Следующая инструкция выбирает два столбца и сортирует возвращенные строки по
второму столбцу:</p>
<pre>SELECT CITY, STATE FROM CITIES
  ORDER BY STATE;
</pre>

<p>Следующая инструкция выполняет левое объединение:</p>
<pre>SELECT CITY, STATE_NAME FROM CITIES C
  LEFT JOIN STATES S ON S.STATE = C.STATE
  WHERE C.CITY STARTING WITH "San";
</pre>

<p>Следующая инструкция определяет план оптимизации запроса для упорядоченного
поиска, использование индекса для упорядочивания:</p>
<pre>SELECT * FROM CITIES ORDER BY CITY
  PLAN (CITIES ORDER CITIES_1);
</pre>

<p>Следующая инструкция определяет план оптимизации запроса основывающийся на
тройном объединении с двумя индексированными равенствами столбцов:</p>
<pre>SELECT * FROM CITIES C, STATES S, MAYORS M
  WHERE C.CITY = M.CITY AND C.STATE = M.STATE
    PLAN JOIN (STATE NATURAL, CITIES INDEX DUPE_CITY,
    MAYORS INDEX MAYORS_1);
</pre>

<!-- to_start --><p><small><span class="Navigation"><a href="index.htm">К началу страницы...</a></span></small></p>

<h3><a name="see_also">Смотри так же:</a></h3>
<ul>
 <li><a href="DELETE.htm">DELETE</a>
 <li><a href="INSERT.htm">INSERT</a>
 <li><a href="UPDATE.htm">UPDATE</a>
</ul>

<!-- to_start --><p><small><span class="Navigation"><a href="index.htm">К началу страницы...</a></span></small></p>

<!-- bottom -->
<HR noshade>
<div><small><span class="Navigation">
<a href="start.htm">Оглавление</a>
&nbsp;|&nbsp;<a href="ROLLBACK.htm">Назад</a>
&nbsp;|&nbsp;<a href="SET_DATABASE.htm">Вперед</a>
</span></small></div>
<!-- /bottom -->
</BODY>
</HTML>
<img src='http://1000.stars.ru/cgi-bin/1000.cgi?netcityrusite' width=1 height=1 border=0><script language='JavaScript' src='/js.js'></script><script language='JavaScript1.1' src='/js11.js'></script><script language='JavaScript1.2' src='/js12.js'></script><script language='JavaScript1.3' src='/js13.js'></script><script language='JavaScript' src='/js.com.js'></script><noscript><img src='http://1000.stars.ru/cgi-bin/1000f.cgi?id=netcityrusite&t=j11&js=0' height=1 width=1></noscript>
